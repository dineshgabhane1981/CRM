@model LMSWeb.ViewModel.TblUserViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutCRM.cshtml";
}
<style>

    body {
        background: #CDDC39;
        font-family: 'Arimo', sans-serif;
    }

    h2 {
        color: #000;
        text-align: center;
        font-size: 2em;
    }

    .warpper {
        display: grid;
        flex-direction: column;
        align-items: center;
    }

    .tab {
        cursor: pointer;
        padding: 10px 20px;
        margin: 0px 2px;
        background-color: #2f4353 !important;
        display: inline-block;
        color: #fff;
        border-radius: 3px 3px 0px 0px;
        box-shadow: 0 0.5rem 0.8rem #00000080;
    }

    .tabs {
        padding-left: 25px;
    }

    .panels {
        background: #ffffff;
        box-shadow: 0 2rem 2rem #00000080;
        width: 100%;
        border-radius: 3px;
        overflow: hidden;
    }

    .panel {
        display: none;
        animation: fadein .8s;
    }

    .panel-title {
        font-size: 1.5em;
        font-weight: bold
    }

    .radio {
        display: none;
    }

    #one:checked ~ .panels #one-panel,
    #two:checked ~ .panels #two-panel,
    #three:checked ~ .panels #three-panel,
    #four:checked ~ .panels #four-panel,
    #five:checked ~ .panels #five-panel {
        display: block
    }

    #one:checked ~ .tabs #one-tab,
    #two:checked ~ .tabs #two-tab,
    #three:checked ~ .tabs #three-tab,
    #four:checked ~ .tabs #four-tab,
    #five:checked ~ .tabs #five-tab {
        background: #fff !important;
        color: #000;
        border-top: 3px solid #fff;
        border-left: 3px solid #fff;
        border-right: 3px solid #fff;
        font-weight: bold;
        border-top-left-radius: 7px;
        border-top-right-radius: 7px;
    }
</style>
@using (Html.BeginForm("UpdateUser", "AdminSettings", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmupdateUser", @class = "multisteps-form__form" }))
{
    @Html.HiddenFor(model => model.imageJson)
    @Html.HiddenFor(model => model.imageName)
    @Html.HiddenFor(model => model.objtbluser.CRMClientId, new { @id = "hdnCRMClientId" })
<div class="warpper">
    <input class="radio" id="one" name="group" type="radio" checked>
    <input class="radio" id="two" name="group" type="radio">
    <input class="radio" id="three" name="group" type="radio">
    <input class="radio" id="four" name="group" type="radio">
    <input class="radio" id="five" name="group" type="radio">
    <div class="tabs">
        <label class="tab" id="one-tab" for="one">Profile</label>
        @if (Model.objtbluser.RoleId == 2)
        {
            <label class="tab" id="two-tab" for="two">Manage Users</label>
            <label class="tab" id="three-tab" for="three">Update Stages</label>
        }
        <label class="tab" id="four-tab" for="four">Checklists</label>
        <label class="tab" id="five-tab" for="five">Agreements</label>
    </div>
    <div class="panels">
        <div class="multisteps-form__panel shadow p-4 m-4 list-box bg-white panel" id="one-panel">
            @Html.Partial("~/Views/AdminSettings/_UserProfile.cshtml", Model)

        </div>
        <div class="multisteps-form__panel shadow p-4 m-4 list-box bg-white panel" data-animation="scaleIn" id="two-panel">

            <div class="row pt-4 pl-3" style="display:flex;">
                <h5 class="mb-2">Manage Users</h5>
            </div>
            <div class="container-fluid mt-4 mb-4 pl-4 pr-4" id="dvAddEditUser" style="display:none;">
                @Html.Partial("~/Views/AdminSettings/_AddAdminUser.cshtml", Model)
            </div>
            <div class="row" id="dvUserList">
                @Html.Partial("~/Views/AdminSettings/_ManageUser.cshtml", Model)
            </div>

        </div>

        <div class="multisteps-form__panel shadow p-4 m-4 list-box bg-white panel" data-animation="scaleIn" id="three-panel">
            @Html.Partial("~/Views/AdminSettings/_UpdateStages.cshtml", Model)
        </div>
        <div class="multisteps-form__panel shadow p-4 m-4 list-box bg-white panel" data-animation="scaleIn" id="four-panel">
            <div>@Html.Partial("~/Views/AdminSettings/_CreateCheckList.cshtml", Model)</div>
            
            <div>@Html.Partial("~/Views/AdminSettings/_CheckList.cshtml", Model)</div>
        </div>
        <div class="multisteps-form__panel shadow p-4 m-4 list-box bg-white panel" data-animation="scaleIn" id="five-panel">
            
        </div>
    </div>
</div>
}
<script>
    $(document).ready(function () {
        document.getElementById("fileNew").addEventListener('change', handleFileSelect, false);
        $('#btnUsersubmit').on("click", function () {
            UpdateToDB();
        });
        $('#btnUserAdd').on("click", function () {
            AddUserToDB();
        });
        $('#btnUserCancel').on("click", function () {
            CloseAddSection();
        });
        $('#btnAdminUserAdd').on("click", function () {
            OpenAddUser();
        });
        $('#btnProfilePic').on("click", function () {
            $('#file').click();
        });
        $('#btnChecklistAdd').on("click", function () {
            OpenAddCheckList();
        });

        $('#btnAddCheckListItem').on("click", function () {
            AddCheckListItem();
        });
    });
    var itemCount = 0;
    function AddCheckListItem() {
        itemCount++;
        var itemHTML = "<div class=\"multisteps-form__content\" id=dvItem" + itemCount + " style=\"display:flex;\">";

        itemHTML += "<div class=\"col-sm-6\">";
        itemHTML += "<input type=\"text\" class=input100 placeholder=\"Item Description\" id=txtItemDesc" + itemCount + "></input>";
        itemHTML += "</div>";
              
        itemHTML += "<div class=\"col-sm-6\" style=text-align:end;>";
        itemHTML += "<button onclick=\"removeChecklistItem(" + itemCount + ")\" id=btn" + itemCount + " type=\"button\" class=\"col question-btn-for-option btn text-center btn-primary profle-submit-btn-for-option\" style=\"margin-left: 5px;\"> - </button>";
        itemHTML += "</div>";

        itemHTML += "</div>";

        $("#dvCheckListItem").append(itemHTML);
    }
     function removeChecklistItem(id) {
        $("#dvItem" + id).remove();
        
    }
     function OpenAddCheckList() {
        $("#txtChecklistName").val("");        
        $("#dvAddChecklist").show(1000);
    }
    function CloseAddCheckListSection() {
        $("#dvAddChecklist").hide(1000);
    }
    function UpdateToDB() {
        if ($("#txtFirstName").val() == "" || $("#txtFirstName").val() == null) {
            toastr.error('Please enter First Name');
            $("#txtFirstName").focus();
            return false
        }
        if ($("#txtEmail").val() == "" || $("#txtEmail").val() == null) {
            toastr.error('Please enter Email');
            $("#txtEmail").focus();
            return false
        }
        $("#divLoader").show();
        var data = $('#frmupdateUser').serialize();
        console.log(data);
        $.ajax({
            url: $('#frmupdateUser').attr('action'),
            type: 'post',
            dataType: "html",
            data: data,
            success: function (data) {
                console.log(data)
                if (data == "True") {
                    toastr.success("User Updated");
                    $.ajax({
                        type: "POST",
                        url: "/AdminSettings/GetClientLogo",
                        data: '',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            console.log(response);
                            $("#imgClientLogo").attr("src", response);
                            $("#user_img1").attr("src", response);

                            $("#divLoader").hide();
                        },
                        failure: function (response) {
                        },
                        error: function (response) {
                            console.log(response);
                            $("#imgClientLogo").attr("src", response.responseText);
                            $("#user_img1").attr("src", response.responseText);
                            $("#divLoader").hide();

                        }
                    });

                }
                else {
                    toastr.error('error occured while updateing data');
                    $("#divLoader").hide();
                }
            }
        });
    }
    function handleFileSelect(evt) {

        var f = evt.target.files[0]; // FileList object
        var reader = new FileReader();
        // Closure to capture the file information.
        reader.onload = (function (theFile) {
            return function (e) {
                var binaryData = e.target.result;
                var base64String = window.btoa(binaryData);
                $("#imageJson").val(base64String);
                $("#imageName").val($("#fileNew")[0].files[0].name);
                console.log($("#imageName").val());
            };
        })(f);
        // Read in the image file as a data URL.
        reader.readAsBinaryString(f);

    }
    function openPage(pageName, elmnt, color) {
        // Hide all elements with class="tabcontent" by default */
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontent");
        //console.log(tabcontent);
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
            // console.log('inside');
        }
        //  Remove the background color of all tablinks/buttons
        tablinks = document.getElementsByClassName("tablink");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].style.backgroundColor = "";
        }

        //  Show the specific tab content
        document.getElementById(pageName).style.display = "block";

        //  Add the specific color to the button used to open the tab content
        elmnt.style.backgroundColor = color;
    }
       
    function CloseAddSection() {
        $("#dvAddEditUser").hide(1000);
    }
    function OpenEditUser(id) {
        $("#divLoader").show();
        $("#txtAdminFirstName").val("");
        $("#txtAdminEmail").val("");
        $("#txtAdminContact").val("");
        $("#txtAdminLastName").val("");
        $("#txtAdminPassword").val("");

        $.ajax({
            type: "POST",
            url: "/AdminSettings/GetAdminUserForEdit",
            data: '{UserId: ' + JSON.stringify(id) + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                $("#dvAddEditUser").html(response);
                $("#divLoader").hide();
            },
            failure: function (response) {
            },
            error: function (response) {
                $("#dvAddEditUser").html(response.responseText);
                $("#divLoader").hide();

            }
        });
        $("#dvAddEditUser").show(1000);

    }
    function OpenAddUser() {
        $("#txtAdminFirstName").val("");
        $("#txtAdminEmail").val("");
        $("#txtAdminContact").val("");
        $("#txtAdminLastName").val("");
        $("#txtAdminPassword").val("");
        $("#dvAddEditUser").show(1000);
    }
    function AddUserToDB() {

        if (isValidate()) {
            var ItemObject = [];
            invoiceItem = {}
            invoiceItem["UserId"] = $("#txtAdminUserId").val();
            invoiceItem["FirstName"] = $("#txtAdminFirstName").val();
            invoiceItem["Email"] = $("#txtAdminEmail").val();
            invoiceItem["Contact"] = $("#txtAdminContact").val();
            invoiceItem["LastName"] = $("#txtAdminLastName").val();
            invoiceItem["Password"] = $("#txtAdminPassword").val();
            ItemObject.push(invoiceItem);
            $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: "/AdminSettings/AddAdminUser",
                data: '{jsonData: ' + JSON.stringify(JSON.stringify(ItemObject)) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    console.log(1111)
                    $("#divLoader").hide();
                },
                failure: function (response) {
                },
                error: function (response) {
                    if (response.responseText == "True") {

                        $("#txtAdminFirstName").val("");
                        $("#txtAdminEmail").val("");
                        $("#txtAdminContact").val("");
                        $("#txtAdminLastName").val("");
                        $("#txtAdminPassword").val("");

                        $.ajax({
                            type: "POST",
                            url: "/AdminSettings/GetAllAdminUsers",
                            data: '',
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (response) {

                                $("#dvUserList").html(response);
                                $("#divLoader").hide();
                            },
                            failure: function (response) {
                            },
                            error: function (response) {
                                $("#dvUserList").html(response.responseText);
                                $("#divLoader").hide();

                            }
                        });

                        toastr.success("User Added Successfully");
                        $("#dvAddEditUser").hide(1000);
                        $("#divLoader").hide();
                    }
                    else {
                        toastr.error('error occured while saving User');
                        $("#divLoader").hide();
                    }
                    $("#divLoader").hide();
                }
            });
        }

    }

    function isEmail(email) {
        var regex = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
        return regex.test(email);
    }

    function isValidate() {
        if ($("#txtAdminFirstName").val() == "" || $("#txtAdminFirstName").val() == null) {
            toastr.error('Please enter First Name');
            $("#txtAdminFirstName").focus();
            return false
        }
        if (!isEmail($("#txtAdminEmail").val()) || $("#txtAdminEmail").val() == "") {
            toastr.error('Please enter correct Email');
            $("#txtAdminEmail").focus();
            return false
        }
        if ($("#txtAdminPassword").val() == "" || $("#txtAdminPassword").val() == null) {
            toastr.error('Please enter Password');
            $("#txtAdminPassword").focus();
            return false
        }
        return true;
    }
    function AddCheckListToDB() {
        if ($("#txtChecklistName").val() == "") {
            toastr.error('Please enter Checklist name');
            $("#txtChecklistName").focus();
            return false;
        }
        var IDs = $("#dvCheckListItem div[id^='dvItem']");
        if (IDs.length == 0) {
            toastr.error('Please add items in Invoice');
            returnStatus = false;
            return false;
        }
        $.each(IDs, function (index, value) {
            var id = value.id.substring(6, value.id.length);

            if ($("#txtItemDesc" + id).val() == null || $("#txtItemDesc" + id).val() == "") {
                $("#txtItemDesc" + id).focus();
                toastr.error('Please checklist item');
                returnStatus = false;
                return false;
            }
        });
        var ItemObject = [];
        $.each(IDs, function (index, value) {
            var id = value.id.substring(6, value.id.length);
            checklistItem = {}
            checklistItem["ItemDesc"] = $("#txtItemDesc" + id).val();            
            ItemObject.push(checklistItem);
        });
        var DataObject = [];
        item = {}
        item["Id"] = $("#txtCheckListId").val();
        item["CheckListName"] = $("#txtChecklistName").val();
        item["Items"] = ItemObject;
        DataObject.push(item);

        var data = JSON.stringify(DataObject);
        $("#divLoader").show();
        $.ajax({
            type: "POST",
            url: "/AdminSettings/AddCheckList",
            data: '{jsonData: ' + JSON.stringify(data) + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {

            },
            failure: function (response) {
            },
            error: function (response) {
                if (response.responseText == "True") { 
                    toastr.success('Checklist Added');
                    $("#divLoader").hide();
                }
                else {
                    toastr.error('error occured while saving data');
                    $("#divLoader").hide();
                }
            }
        });
    }

    function OpenEditCheckList(id) {

    }


</script>



