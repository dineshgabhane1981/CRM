@model LMSWeb.ViewModel.CRMUserViewModel
@{
    ViewBag.Title = "Enquiry";
    Layout = "~/Views/Shared/_LayoutCRM.cshtml";
    var baseURL = System.Configuration.ConfigurationManager.AppSettings["BaseURL"];
    LMSBL.DBModels.TblUser userModel = new LMSBL.DBModels.TblUser();
    userModel = (LMSBL.DBModels.TblUser)Session["UserSession"];
}

<link href="~/assets/CRM/styleSteps.css" rel="stylesheet" />
<style>
    .optionClass {
        background-color: lightgray;
    }

    .grayed {
        pointer-events: none;
        opacity: 0.3;
    }
</style>
@*<h5 class="">Add/Edit Client Details</h5>*@
@if (Model != null)
{
    if (Model.ObjCRMUser != null)
    {
        var movetotext = "Move To";
        var assigntext = "Assigned To";
        <div style="float:right;">
            @if (Model.ObjCRMUser.CurrentStage == 3)
            {
                @movetotext
                @Html.DropDownListFor(model => model.ObjCRMUser.CurrentSubStage, new SelectList(Model.SubStagesList, "Value", "Text"), htmlAttributes: new { id = "ddlclientlist", @class = "input100" })

            }
            @if (userModel.RoleId == 2)
            {
                @assigntext
                @Html.DropDownListFor(model => model.ObjCRMUser.AssignedTo, new SelectList(Model.UserList, "Value", "Text"), "Please Select", htmlAttributes: new { id = "ddluserlist", @class = "input100" })

            }
        </div>
    }
}
<div>
    <!-- partial:index.partial.html -->
    <!--PEN HEADER-->
    <header class="header">
    </header>
    <!--PEN CONTENT     -->
    <div class="content">
        <!--content inner-->
        <div class="content__inner">
            <div class="container">
            </div>
            <div class="container overflow-hidden">
                <!--multisteps-form-->
                <div class="multisteps-form">
                    <!--progress bar-->
                    <div class="row">
                        <div class="col-12 col-lg-12 ml-auto mr-auto mb-4">
                            <div class="multisteps-form__progress">
                                <button class="multisteps-form__progress-btn js-active" type="button" title="Personal Details">Personal</button>
                                <button class="multisteps-form__progress-btn" type="button" title="Visa Details">Visa Details</button>
                                <button class="multisteps-form__progress-btn" type="button" title="Health Details">Health</button>
                                <button class="multisteps-form__progress-btn" type="button" title="Character">Character</button>
                                <button class="multisteps-form__progress-btn" type="button" title="Qualification Details">Qualification</button>
                                <button class="multisteps-form__progress-btn" type="button" title="File notes">File Notes</button>
                                <button class="multisteps-form__progress-btn" type="button" title="Documents">Documents</button>
                                <button class="multisteps-form__progress-btn" type="button" title="Invoice">Invoice</button>
                            </div>
                        </div>
                    </div>
                    <!--form panels-->
                    @using (Html.BeginForm("AddCRMUser", "CRMUsers", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmadduser", @class = "multisteps-form__form" }))
                    {
                        @*@Html.AntiForgeryToken()*@
                        <div class="row">
                            <div class="col-12 col-lg-12 m-auto ">
                                <form class="multisteps-form__form">
                                    <!--Personal Information-->
                                    @Html.HiddenFor(model => model.Clone)
                                    @Html.HiddenFor(model => model.ObjCRMUser.Id)
                                    @Html.HiddenFor(model => model.ObjCRMUser.CurrentStage)
                                    @Html.HiddenFor(model => model.ObjCRMUser.CurrentSubStage)
                                    @Html.HiddenFor(model => model.ObjCRMUser.AssignedTo)
                                    <div class="multisteps-form__panel shadow p-4 list-box bg-white js-active" data-animation="scaleIn">
                                        <h5 class="multisteps-form__title">Personal Info</h5>
                                        <div class="multisteps-form__content" style="display:flex;">
                                            <div class="col-sm-6">
                                                @Html.DropDownListFor(model => model.ObjCRMUser.VisaCountry, new SelectList(Model.VisaCountriesList, "Value", "Text"), htmlAttributes: new { @class = "input150", tabindex = 1 })
                                                @Html.TextBoxFor(model => model.ObjCRMUser.FirstName, new { @class = "input150", placeholder = "First Name", @id = "txtFirstName", tabindex = 3 })
                                                @*@Html.TextBoxFor(model => model.ObjCRMUser.MiddleName, new { @class = "input150", placeholder = "Middle Name", tabindex = 5 })*@
                                                @Html.TextBoxFor(model => model.ObjCRMUser.OtherName, new { @class = "input150", placeholder = "Other Name", tabindex = 5 })
                                                @Html.TextBoxFor(model => model.ObjCRMUser.Email, new { @class = "input150", placeholder = "Email", @id = "txtEmail", tabindex = 7 })
                                                @*@Html.TextBoxFor(model => model.ObjCRMUser.SecondaryEmail, new { @class = "input150", placeholder = "Secondary Email", tabindex = 11 })*@
                                                @Html.TextBoxFor(model => model.ObjCRMUser.DOB, "{0:dd/MM/yyyy}", new { @class = "input150 datepicker", @id = "dtDOB", @autocomplete = "off", placeholder = "Date of Birth (DD/MM/YYYY)", tabindex = 9 })
                                                @Html.DropDownListFor(model => model.ObjCRMUser.MobileNoCountry, new SelectList(Model.CountriesCodes, "Value", "Text"), "Country Code", htmlAttributes: new { @class = "input50", tabindex = 11 })
                                                @Html.TextBoxFor(model => model.ObjCRMUser.MobileNo, new { @class = "input50", placeholder = "Mobile no", tabindex = 12 })
                                                @*@Html.TextBoxFor(model => model.ObjCRMUser.OverseasMobile, new { @class = "input150", placeholder = "Overseas Mobile", tabindex = 18 })*@
                                                @*@Html.TextBoxFor(model => model.ObjCRMUser.OtherContactInfo, new { @class = "input150", placeholder = "Other Contact Info", tabindex = 20 })*@
                                                @Html.TextBoxFor(model => model.ObjCRMUser.Qualification, new { @class = "input150", placeholder = "Qualification", tabindex = 14 })
                                                @Html.TextBoxFor(model => model.ObjCRMUser.Occupation, new { @class = "input150", placeholder = "Occupation", tabindex = 17 })
                                                @Html.DropDownListFor(model => model.ObjCRMUser.WhereDidYouFindUs, new SelectList(Model.WhereDidYouFindUsList, "Value", "Text"), "Where Did You Find Us", htmlAttributes: new { @class = "input150", tabindex = 19 })
                                            </div>
                                            <div class="col-sm-6">
                                                @Html.TextBoxFor(model => model.ObjCRMUser.Title, new { @class = "input150", placeholder = "Title", tabindex = 2 })
                                                @Html.TextBoxFor(model => model.ObjCRMUser.LastName, new { @class = "input150", placeholder = "Last Name", tabindex = 4 })
                                                @Html.DropDownListFor(model => model.ObjCRMUser.Gender, Model.Gender(), "Select Gender", htmlAttributes: new { @class = "input150", tabindex = 6 })
                                                @Html.DropDownListFor(model => model.ObjCRMUser.CountryResideIn, new SelectList(Model.UserCountryList, "Value", "Text"), "Country Reside in", htmlAttributes: new { @class = "input150", tabindex = 8 })
                                                @*@Html.TextBoxFor(model => model.ObjCRMUser.AlternateEmail, new { @class = "input150", placeholder = "Alternate Email", tabindex = 10 })*@
                                                @*@Html.TextBoxFor(model => model.ObjCRMUser.OtherEmail, new { @class = "input150", placeholder = "Other Email", tabindex = 12 })*@
                                                @Html.TextBoxFor(model => model.ObjCRMUser.Address, new { @class = "input150", placeholder = "Address", tabindex = 10 })
                                                @*@Html.TextBoxFor(model => model.ObjCRMUser.SecondaryMobile, new { @class = "input150", placeholder = "Secondary Mobile", tabindex = 17 })*@
                                                @Html.TextBoxFor(model => model.ObjCRMUser.LandLine, new { @class = "input150", placeholder = "LandLine no", tabindex = 13 })
                                                @Html.DropDownListFor(model => model.ObjCRMUser.MaritalStatus, Model.MaritalStatus(), "Select Marital Status", htmlAttributes: new { @class = "input150", tabindex = 16 })
                                                @Html.TextBoxFor(model => model.ObjCRMUser.DependentChildren, new { @class = "input150", placeholder = "No of Dependent Children", tabindex = 18 })

                                            </div>
                                        </div>
                                        <div class="button-row d-flex mt-4">
                                            <button class="btn btn-primary ml-auto js-btn-next" type="button" title="Next" tabindex="20">Next</button>
                                        </div>
                                    </div>
                                    <!--Visa and Passport Details-->
                                    <div class="multisteps-form__panel shadow p-4 list-box bg-white" data-animation="scaleIn">
                                        <h5 class="multisteps-form__title">New Application</h5>
                                        <div class="multisteps-form__content" style="display:flex;">
                                            <div class="col-sm-6">
                                                @Html.DropDownListFor(model => model.ObjCRMUsersVisaDetail.IntrestedVisa, new SelectList(Model.CurrentVisaTypeList, "Value", "Text"), "Interested Visa", htmlAttributes: new { @class = "input150", tabindex = 21 })

                                                @Html.TextBoxFor(model => model.ObjCRMUsersVisaDetail.AnyPreviousVisaDecline, new { @class = "input150", placeholder = "Any Previous Visa Decline", tabindex = 23 })

                                            </div>
                                            <div class="col-sm-6">
                                                @Html.DropDownListFor(model => model.ObjCRMUsersVisaDetail.UpdateVisaStatus, new SelectList(Model.VisaStatusList, "Value", "Text"), "Visa Status", htmlAttributes: new { @class = "input150", tabindex = 22 })

                                                @Html.TextBoxFor(model => model.ObjCRMUsersVisaDetail.DueDate, "{0:dd/MM/yyyy}", new { @class = "input150 datepicker", @id = "dtDueDate", @autocomplete = "off", placeholder = "Lodgement Date (DD/MM/YYYY)", tabindex = 24 })

                                            </div>
                                        </div>
                                        <h5 class="multisteps-form__title">Current Visa</h5>
                                        <div class="multisteps-form__content" style="display:flex;">
                                            <div class="col-sm-6">
                                                @Html.DropDownListFor(model => model.ObjCRMUsersVisaDetail.VisaType, new SelectList(Model.CurrentVisaTypeList, "Value", "Text"), "Current Visa Type", htmlAttributes: new { @class = "input150", tabindex = 25 })
                                                @Html.TextBoxFor(model => model.ObjCRMUsersVisaDetail.CurrentNZVisaExpiryDate, "{0:dd/MM/yyyy}", new { @class = "input150 datepicker", @id = "dtCurrentNZVisaExpiryDate", @autocomplete = "off", placeholder = "Current New Zealand Visa Expiry Date (DD/MM/YYYY)", tabindex = 27 })

                                            </div>
                                            <div class="col-sm-6">
                                                @Html.TextBoxFor(model => model.ObjCRMUsersVisaDetail.TravelConditionsValidTo, "{0:dd/MM/yyyy}", new { @class = "input150 datepicker", @id = "dtTravelConditionsValidTo", @autocomplete = "off", placeholder = "Travel Condition Valid To (DD/MM/YYYY)", tabindex = 26 })

                                            </div>
                                        </div>
                                        <br /><br />
                                        <h5 class="multisteps-form__title">Passport Details</h5>
                                        <div class="multisteps-form__content" style="display:flex;">
                                            <div class="col-sm-6">
                                                @Html.TextBoxFor(model => model.ObjCRMUsersPassportDetail.PassportNumber, new { @class = "input150", placeholder = "Passport Number", tabindex = 28 })
                                                @Html.TextBoxFor(model => model.ObjCRMUsersPassportDetail.PassportIssueDate, "{0:dd/MM/yyyy}", new { @class = "input150 datepicker", @id = "dtPassportIssueDate", @autocomplete = "off", placeholder = "Passport Issue Date (DD/MM/YYYY)", tabindex = 30 })
                                            </div>
                                            <div class="col-sm-6">
                                                @Html.DropDownListFor(model => model.ObjCRMUsersPassportDetail.CountryOfIssue, new SelectList(Model.UserCountryList, "Value", "Text"), "Country Of Issue", htmlAttributes: new { @class = "input150", tabindex = 29 })
                                                @Html.TextBoxFor(model => model.ObjCRMUsersPassportDetail.PassportExpiryDate, "{0:dd/MM/yyyy}", new { @class = "input150 datepicker", @id = "dtPassportExpiryDate", @autocomplete = "off", placeholder = "Passport Expiry Date (DD/MM/YYYY)", tabindex = 31 })
                                            </div>
                                        </div>

                                        <h5>Partner Passport Details</h5>
                                        <div class="multisteps-form__content" style="display:flex;">
                                            <div class="col-sm-6">
                                                @Html.TextBoxFor(model => model.ObjCRMUsersPassportDetail.SecondPassportNumber, new { @class = "input150", placeholder = "Partner Passport Number", tabindex = 32 })
                                                @Html.TextBoxFor(model => model.ObjCRMUsersPassportDetail.SecondPassportIssueDate, "{0:dd/MM/yyyy}", new { @class = "input150 datepicker", @id = "dtSecondPassportIssueDate", @autocomplete = "off", placeholder = "Partner Passport Issue Date (DD/MM/YYYY)", tabindex = 34 })
                                            </div>
                                            <div class="col-sm-6">
                                                @Html.DropDownListFor(model => model.ObjCRMUsersPassportDetail.SecondCountryOfIssue, new SelectList(Model.UserCountryList, "Value", "Text"), "Partner Country Of Issue", htmlAttributes: new { @class = "input150", tabindex = 33 })
                                                @Html.TextBoxFor(model => model.ObjCRMUsersPassportDetail.SecondPassportExpiryDate, "{0:dd/MM/yyyy}", new { @class = "input150 datepicker", @id = "dtSecondPassportExpiryDate", @autocomplete = "off", placeholder = "Partner Passport Expiry Date (DD/MM/YYYY)", tabindex = 35 })
                                            </div>
                                        </div>
                                        <br /><br />



                                        <div class="button-row d-flex mt-4">
                                            <button class="btn btn-primary js-btn-prev" type="button" title="Prev" tabindex="36">Prev</button>
                                            <button class="btn btn-primary ml-auto js-btn-next" type="button" title="Next" tabindex="37">Next</button>
                                        </div>
                                    </div>
                                    <!--Medical Details-->
                                    <div class="multisteps-form__panel shadow p-4 list-box bg-white " data-animation="scaleIn">
                                        <h5 class="multisteps-form__title">Health Details</h5>
                                        <div class="multisteps-form__content" style="display:flex;">
                                            <div class="col-sm-6">
                                                @Html.TextBoxFor(model => model.ObjCRMUsersMedicalDetail.NZER, new { @class = "input150", placeholder = "Medical Reference No", tabindex = 38 })
                                                @Html.TextBoxFor(model => model.ObjCRMUsersMedicalDetail.MedicalCertificateExpiryDate, "{0:dd/MM/yyyy}", new { @class = "input150 datepicker", @id = "dtMedicalCertificateExpiryDate", @autocomplete = "off", placeholder = "Expiry Date (DD/MM/YYYY)", tabindex = 40 })
                                                @Html.TextBoxFor(model => model.ObjCRMUsersMedicalDetail.XrayIssueDate, "{0:dd/MM/yyyy}", new { @class = "input150 datepicker", @id = "dtXrayIssueDate", @autocomplete = "off", placeholder = "Xray Issue Date (DD/MM/YYYY)", tabindex = 42 })
                                                @*@Html.DropDownListFor(model => model.ObjCRMUsersMedicalDetail.XrayGrading, Model.MedicalGrading(), "Select Xray Grading", htmlAttributes: new { @class = "input150", tabindex = 50 })*@
                                            </div>
                                            <div class="col-sm-6">
                                                @Html.TextBoxFor(model => model.ObjCRMUsersMedicalDetail.MedicalCertificateIssueDate, "{0:dd/MM/yyyy}", new { @class = "input150 datepicker", @id = "dtMedicalCertificateIssueDate", @autocomplete = "off", placeholder = "Issue Date (DD/MM/YYYY)", tabindex = 39 })
                                                @*@Html.DropDownListFor(model => model.ObjCRMUsersMedicalDetail.MedicalGrading, Model.MedicalGrading(), "Select Medical Grading", htmlAttributes: new { @class = "input150", tabindex = 47 })*@
                                                @Html.TextBoxFor(model => model.ObjCRMUsersMedicalDetail.XrayExpiryDate, "{0:dd/MM/yyyy}", new { @class = "input150 datepicker", @id = "dtXrayExpiryDate", @autocomplete = "off", placeholder = "Xray Expiry Date (DD/MM/YYYY)", tabindex = 41 })
                                                @Html.DropDownListFor(model => model.ObjCRMUsersMedicalDetail.MedicalNotesDDL, Model.MedicalNotesDDL(), "Medical Status", htmlAttributes: new { @class = "input150", tabindex = 43 })
                                            </div>
                                        </div>
                                        <div class="col-sm-12">
                                            Medical Notes
                                            @Html.TextAreaFor(model => model.ObjCRMUsersMedicalDetail.MedicalNotes, new { @class = "input150", id = "medicalnotesarea", tabindex = 44 })
                                        </div>

                                        <div class="button-row d-flex mt-4 col-12">
                                            <button class="btn btn-primary js-btn-prev" type="button" title="Prev" tabindex="45">Prev</button>
                                            <button class="btn btn-primary ml-auto js-btn-next" type="button" title="Next" tabindex="46">Next</button>
                                        </div>

                                    </div>
                                    <!--Police Verification Info-->
                                    <div class="multisteps-form__panel shadow p-4 list-box bg-white" data-animation="scaleIn">
                                        <h5 class="multisteps-form__title"></h5>
                                        <div class="multisteps-form__content" style="display:flex;">
                                            <div class="col-sm-6">
                                                @Html.TextBoxFor(model => model.ObjCRMUsersPoliceCertificateInfo.PoliceCertificateDate1, "{0:dd/MM/yyyy}", new { @class = "input150 datepicker", @id = "dtPoliceCertificateDate1", @autocomplete = "off", placeholder = "PCC Issue Date 1 (DD/MM/YYYY)", tabindex = 47 })
                                                @Html.TextBoxFor(model => model.ObjCRMUsersPoliceCertificateInfo.PoliceCertificateDate2, "{0:dd/MM/yyyy}", new { @class = "input150 datepicker", @id = "dtPoliceCertificateDate2", @autocomplete = "off", placeholder = "PCC Issue Date 2 (DD/MM/YYYY)", tabindex = 49 })
                                                @Html.TextBoxFor(model => model.ObjCRMUsersPoliceCertificateInfo.PoliceCertificateDate3, "{0:dd/MM/yyyy}", new { @class = "input150 datepicker", @id = "dtPoliceCertificateDate3", @autocomplete = "off", placeholder = "PCC Issue Date 3 (DD/MM/YYYY)", tabindex = 51 })
                                            </div>
                                            <div class="col-sm-6">
                                                @Html.DropDownListFor(model => model.ObjCRMUsersPoliceCertificateInfo.PoliceCertificateCountry1, new SelectList(Model.UserCountryList, "Value", "Text"), "Please Select Country", htmlAttributes: new { @class = "input150", tabindex = 48 })
                                                @Html.DropDownListFor(model => model.ObjCRMUsersPoliceCertificateInfo.PoliceCertificateCountry2, new SelectList(Model.UserCountryList, "Value", "Text"), "Please Select Country", htmlAttributes: new { @class = "input150", tabindex = 50 })
                                                @Html.DropDownListFor(model => model.ObjCRMUsersPoliceCertificateInfo.PoliceCertificateCountry3, new SelectList(Model.UserCountryList, "Value", "Text"), "Please Select Country", htmlAttributes: new { @class = "input150", tabindex = 52 })
                                            </div>
                                        </div>
                                        <div class="col-sm-12">
                                            Character Notes
                                            @Html.TextAreaFor(model => model.ObjCRMUsersPoliceCertificateInfo.PCCNotes, new { @class = "input150", id = "pccnotesarea", tabindex = 53 })
                                        </div>
                                        <div class="button-row d-flex mt-4">
                                            <button class="btn btn-primary js-btn-prev" type="button" title="Prev" tabindex="45">Prev</button>
                                            <button class="btn btn-primary ml-auto js-btn-next" type="button" title="Next" tabindex="55">Next</button>
                                        </div>
                                    </div>
                                    <!--INZ Details-->
                                    <div class="multisteps-form__panel shadow p-4 list-box bg-white" data-animation="scaleIn">
                                        <h5 class="multisteps-form__title">INZ Login Details</h5>
                                        <div class="multisteps-form__content" style="display:flex;">
                                            <div class="col-sm-6">
                                                @Html.TextBoxFor(model => model.ObjCRMUsersINZLoginDetail.ClientNumber, new { @class = "input150", placeholder = "Client Number", tabindex = 56 })
                                            </div>
                                            <div class="col-sm-6">
                                                @Html.TextBoxFor(model => model.ObjCRMUsersINZLoginDetail.ClientUserName, new { @class = "input150", placeholder = "User Name", tabindex = 57 })
                                                @Html.TextBoxFor(model => model.ObjCRMUsersINZLoginDetail.ClientPassword, new { @class = "input150", placeholder = "Password", tabindex = 58 })
                                            </div>
                                        </div>
                                        <h5 class="multisteps-form__title">NZQA Details</h5>
                                        <div class="multisteps-form__content" style="display:flex;">
                                            <div class="col-sm-6">
                                                @Html.TextBoxFor(model => model.ObjCRMUsersNZQADetail.NZQAOnlineSubmissionDate, "{0:dd/MM/yyyy}", new { @class = "input150 datepicker", @id = "dtNZQAOnlineSubmissionDate", @readonly = "readonly", @autocomplete = "off", placeholder = "NZQA Online Submission Date", tabindex = 59 })
                                            </div>
                                            <div class="col-sm-6">
                                                @Html.TextBoxFor(model => model.ObjCRMUsersNZQADetail.NZQADocumentsSubmissionDate, "{0:dd/MM/yyyy}", new { @class = "input150 datepicker", @id = "dtNZQADocumentsSubmissionDate", @readonly = "readonly", @autocomplete = "off", placeholder = "NZQA Documents Submission Date", tabindex = 60 })
                                                @Html.TextBoxFor(model => model.ObjCRMUsersNZQADetail.NZQADocumentsReturnedDate, "{0:dd/MM/yyyy}", new { @class = "input150 datepicker", @id = "dtNZQADocumentsReturnedDate", @readonly = "readonly", @autocomplete = "off", placeholder = "NZQA Documents Returned Date", tabindex = 61 })
                                            </div>
                                        </div>
                                        <div class="button-row d-flex mt-4">
                                            <button class="btn btn-primary js-btn-prev" type="button" title="Prev" tabindex="62">Prev</button>
                                            <button class="btn btn-primary ml-auto js-btn-next" type="button" title="Next" tabindex="63">Next</button>
                                        </div>
                                    </div>
                                    <!--File Notes-->
                                    <div class="multisteps-form__panel shadow p-4 list-box bg-white" data-animation="scaleIn">
                                        <h5 class="multisteps-form__title">File Notes</h5>
                                        <div class="multisteps-form__content">
                                            @if (Model.ObjCRMUser.CurrentStage == 3)
                                            {
                                                @Html.DropDownListFor(model => model.ObjCRMNote.SubStage, new SelectList(Model.SubStagesList, "Value", "Text"), "Select Sub stage", htmlAttributes: new { id = "ddlSubStageList", @class = "input100" })
                                            }
                                            @Html.RadioButtonFor(model => model.ObjCRMNote.CommunicationSource, "Phone") Phone
                                            @Html.RadioButtonFor(model => model.ObjCRMNote.CommunicationSource, "Personally") In Person
                                            @Html.RadioButtonFor(model => model.ObjCRMNote.CommunicationSource, "Whats App") Chat
                                            @Html.RadioButtonFor(model => model.ObjCRMNote.CommunicationSource, "Email") Email
                                            <br />
                                            File Notes
                                            @Html.TextAreaFor(model => model.ObjCRMNote.Notes, new { @class = "input150", id = "filenotesarea" })

                                        </div>
                                        <div class="col-sm-12">
                                            <div class="button-row d-flex mt-4">
                                                <button class="btn btn-primary js-btn-prev" type="button" title="Prev">Prev</button>
                                                <button class="btn btn-primary ml-auto js-btn-next" type="button" title="Next">Next</button>
                                            </div>
                                        </div>
                                        <br />
                                        <div div class="col-sm-12 list-box bg-white" data-animation="scaleIn">

                                            <div id="dvClientNotes" class="col-sm-12">
                                                @if (Model.lstNotes != null)
                                                {
                                                    if (Model.lstNotes.Count > 0)
                                                    {
                                                        <div style="margin-bottom:10px;"><b>All File Notes</b></div>
                                                        <div class="row justify-content-center h-100">
                                                            <div class="col   add-user-section ">

                                                                @foreach (var item1 in Model.lstNotesSubStages)
                                                                {
                                                                    <b> @item1 </b>
                                                                    foreach (var item in Model.lstNotes)
                                                                    {
                                                                        if (item1 == item.SubStageName)
                                                                        {
                                                                            <div>
                                                                                <div>
                                                                                    <div style="margin-left:40px;">
                                                                                        <i class="fa fa-clock-o" aria-hidden="true"></i> @item.CreatedDate || Communication : <b> @item.CommunicationSource </b>
                                                                                    </div>
                                                                                </div>
                                                                                <div>
                                                                                    <div style="margin-left:40px;">@Html.Raw(item.Notes)</div>
                                                                                </div>
                                                                            </div>
                                                                        }
                                                                    }
                                                                    <hr />
                                                                }
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="col-sm-12" style="margin-bottom:10px; text-align:center;"><b>No File Notes available</b></div>
                                                    }
                                                }

                                            </div>
                                        </div>


                                    </div>
                                    <!--Documents-->
                                    <div class="multisteps-form__panel shadow p-4 list-box bg-white" data-animation="scaleIn">
                                        <h5 class="multisteps-form__title">Upload Documents</h5>
                                        <div class="multisteps-form__content" id="dvDocument">
                                            <div class="col-12 col-lg-12 ml-auto mr-auto" style="float:left;">
                                                <div class="col-6 col-lg-6 ml-auto mr-auto" style="float:left;">
                                                    @Html.TextBoxFor(model => model.ObjCRMDocument.DocumentLink, new { @class = "input150", id = "txtDocLink", placeholder = "Document Location Path", tabindex = 64 })
                                                </div>
                                                <div class="col-6 col-lg-6 ml-auto mr-auto" style="float:left;">
                                                    <button type="button" id="btnDocLocation" class="btn btn-primary profle-submit-btn "><img src="~/assets/images/check-img.png" /> Save</button>
                                                </div>
                                            </div>
                                            <div class="col-12 col-lg-12 ml-auto mr-auto" style="float:left;">
                                                <div class="col-6 col-lg-6 ml-auto mr-auto" style="float:left;">
                                                    @Html.HiddenFor(model => model.ObjCRMDocument.DocumentfileName)
                                                    @Html.HiddenFor(model => model.ObjCRMDocument.Comments)
                                                    @Html.TextBoxFor(model => model.ObjCRMDocument.DocumentName, new { @class = "input150", id = "txtDocName", placeholder = "Document Name", tabindex = 65 })
                                                </div>
                                                <div class="col-6 col-lg-6 ml-auto mr-auto" style="float:left; padding-left:15px; padding-top:5px;">
                                                    <input type="file" name="FileUpload" id="FileUpload" style="width: 100%;" /><br /><br />
                                                    <button type="button" id="btnDocAdd" class="btn btn-primary profle-submit-btn "><img src="~/assets/images/check-img.png" /> Add</button>
                                                </div>
                                            </div>

                                        </div>
                                        <div id="dvDocuments" class="row col-12 col-lg-12 ml-auto mr-auto">
                                            @if (Model.ObjCRMDocumentLST != null)
                                            {
                                                @Html.Partial("~/Views/Documents/_documentList.cshtml", Model.ObjCRMDocumentLST)
                                            }
                                        </div>


                                        <div class="button-row d-flex mt-4">
                                            <button class="btn btn-primary js-btn-prev" type="button" title="Prev" tabindex="66">Prev</button>
                                            <button class="btn btn-primary ml-auto js-btn-next" type="button" title="Next" tabindex="67">Next</button>
                                        </div>
                                    </div>
                                    <!--Invoice-->
                                    <div class="multisteps-form__panel shadow p-4 list-box bg-white" data-animation="scaleIn">
                                        <h5 class="multisteps-form__title">Billing Address</h5>
                                        <div class="multisteps-form__content" style="display:flex;">
                                            <div class="col-sm-6">
                                                @Html.TextBoxFor(model => model.ObjCRMUsersBillingAddress.ContactPerson, new { @class = "input150", placeholder = "Contact Person", tabindex = 68 })
                                                @Html.TextBoxFor(model => model.ObjCRMUsersBillingAddress.Street, new { @class = "input150", placeholder = "Street", tabindex = 70 })
                                                @Html.TextBoxFor(model => model.ObjCRMUsersBillingAddress.City, new { @class = "input150", placeholder = "City", tabindex = 72 })
                                                @Html.TextBoxFor(model => model.ObjCRMUsersBillingAddress.PostalCode, new { @class = "input150", placeholder = "Postal Code", tabindex = 74 })
                                            </div>
                                            <div class="col-sm-6">
                                                @Html.TextBoxFor(model => model.ObjCRMUsersBillingAddress.House, new { @class = "input150", placeholder = "House", tabindex = 69 })
                                                @Html.TextBoxFor(model => model.ObjCRMUsersBillingAddress.Suburb, new { @class = "input150", placeholder = "Suburb", tabindex = 71 })
                                                @Html.TextBoxFor(model => model.ObjCRMUsersBillingAddress.Country, new { @class = "input150", placeholder = "Country", tabindex = 73 })
                                            </div>
                                        </div>
                                        <div class="button-row d-flex mt-4">
                                            <button class="btn btn-primary js-btn-prev" type="button" title="Prev" tabindex="75">Prev</button>
                                            @*<button class="btn btn-success ml-auto" type="button" id="btnSubmitUser" title="Save" tabindex="83">Save</button>*@
                                        </div>
                                    </div>

                                </form>
                            </div>

                        </div>
                        <div class="row  justify-content-end">
                            <div class="button-row d-flex mt-4">

                                <button class="btn btn-success ml-auto" type="button" id="btnSubmitUser" title="Save" tabindex="76">Save</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <!-- partial -->
    <script src='https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.min.css'></script>
    <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.15/dist/summernote.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.15/dist/summernote.min.js"></script>
    <script src="~/assets/CRM/scriptSteps.js"></script>

</div>

<script type="text/javascript">
    function AddUser() {
        if ($("#txtFirstName").val() == "" || $("#txtFirstName").val() == null) {
            toastr.error('Please enter First Name');
            $("#txtFirstName").focus();
            return false
        }
        if ($("#txtEmail").val() == "" || $("#txtEmail").val() == null) {
            toastr.error('Please enter Email');
            $("#txtEmail").focus();
            return false
        }
        $("#divLoader").show();
        var data = $('#frmadduser').serialize();
        console.log(data);
        $.ajax({
            url: $('#frmadduser').attr('action'),
            type: 'post',
            dataType: "html",
            data: data,
            success: function (data) {
                console.log(data)
                if (data != "") {
                    toastr.success("User Saved");
                    $("#divLoader").hide();
                    window.location.href = "@baseURL/" + data;
                }
                else {
                    toastr.success("User Saved");
                    $("#divLoader").hide();
                }
            }
        });
    }

    $(document).ready(function () {
        var field = 'myid';
        var url = window.location.href;
        if (url.indexOf('?' + field + '=') == -1) {
            $("#dvDocument").addClass("grayed");
        }
        else {
            $("#dvDocument").removeClass("grayed");
        }

        document.getElementById("FileUpload").addEventListener('change', handleFileSelect, false);
        var currentStage = $("#ObjCRMUser_CurrentStage").val();
        if (currentStage == 3) {
            var CurrentSubStage = $("#ObjCRMUser_CurrentSubStage").val();
            console.log("Sub stage - " + CurrentSubStage)
            if (CurrentSubStage == null || CurrentSubStage == "") {
                console.log("Inside");
                CurrentSubStage = 1;
            }
            $('#ddlSubStageList').val(CurrentSubStage);
            $("#ObjCRMUser_CurrentSubStage").val(CurrentSubStage);
            console.log($("#ObjCRMUser_CurrentSubStage").val());

        }

        $('#btnSubmitUser').on("click", function () {
            AddUser();
        });
        $('#btnDocLocation').on("click", function () {
            AddLocation();
        });
        $('#btnDocAdd').on("click", function () {
            AddDocToDB();
        });

        function AddDocToDB() {
            var clientId = $("#ObjCRMUser_Id").val();

            var DocName = $('#txtDocName').val();
            if (DocName == "") {
                toastr.error('Please enter document name');
                return false;
            }
            var selectedFile = $("#ObjCRMDocument_Comments").val();
            if (selectedFile == "") {
                toastr.error('Please select document');
                return false;
            }

            $("#divLoader").show();

            var data = [];
            item = {}
            item["ClientId"] = clientId;
            item["DocName"] = DocName;
            item["FileName"] = $("#ObjCRMDocument_DocumentfileName").val();
            item["base64string"] = $("#ObjCRMDocument_Comments").val();

            data.push(item);
            //console.log(data);

            $.ajax({
                type: "POST",
                url: "/CRMUsers/adddocuments",
                data: '{jsonData: ' + JSON.stringify(JSON.stringify(data)) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    $("#divLoader").hide();
                },
                failure: function (response) {
                },
                error: function (response) {
                    console.log(response.responseText)
                    if (response.responseText == "True") {
                        GetDocuments(clientId);
                        toastr.success("Document Uploaded Successfully");
                        $("#divLoader").hide();
                    }
                    else {
                        toastr.error('error occured while saving Document');
                        $("#divLoader").hide();
                    }
                    $("#divLoader").hide();
                }
            });

        }
        function GetDocuments(id) {
            $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: "/Documents/LoadDocuments",
                data: '{Id: ' + JSON.stringify(id) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    $('#dvDocuments').html(response);

                },
                failure: function (response) {
                },
                error: function (response) {

                    $('#dvDocuments').html(response.responseText);
                    $('#dvDocuments').show();
                    $("#divLoader").hide();
                }
            });
        }
        LoadDocumentLink();

        function AddLocation() {
            var ClientID = $("#ObjCRMUser_Id").val();
            var link = $('#txtDocLink').val();

            if (link == "") {
                toastr.error('Please enter document path');
                return false;
            }
            $("#divLoader").show();
            $.ajax({
                type: "POST",
                url: "/Documents/SaveDocumentLink",
                data: '{Id: ' + JSON.stringify(ClientID) + ', link: ' + JSON.stringify(link) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    $("#divLoader").hide();
                },
                failure: function (response) {
                },
                error: function (response) {
                    console.log(response.responseText)
                    if (response.responseText == "True") {
                        toastr.success("Document Path Saved");
                        $("#divLoader").hide();
                    }
                    else {
                        toastr.error('error occured while saving Document Path');
                        $("#divLoader").hide();
                    }
                    $("#divLoader").hide();
                }
            });
        }

        function LoadDocumentLink() {
            var ClientID = $("#ObjCRMUser_Id").val();
            if (ClientID != "" && ClientID != null) {
                $.ajax({
                    type: "POST",
                    url: "/Documents/GetDocumentLink",
                    data: '{Id: ' + JSON.stringify(ClientID) + '}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        $('#txtDocLink').val(response);
                        //$('#dvDocuments').html(response);
                    },
                    failure: function (response) {
                    },
                    error: function (response) {
                        $('#txtDocLink').val(response.responseText);
                        //$("#divLoader").hide();
                    }
                });
            }
        }

        function handleFileSelect(evt) {
            var id = evt.currentTarget.id;
            var qId = id.substring(4, id.length);
            var f = evt.target.files[0]; // FileList object
            var reader = new FileReader();
            // Closure to capture the file information.
            reader.onload = (function (theFile) {
                return function (e) {
                    var binaryData = e.target.result;
                    var base64String = window.btoa(binaryData);
                    $("#ObjCRMDocument_Comments").val(base64String);
                    $("#ObjCRMDocument_DocumentfileName").val($("#FileUpload")[0].files[0].name);
                    console.log($("#ObjCRMDocument_DocumentfileName").val());
                };
            })(f);
            // Read in the image file as a data URL.
            reader.readAsBinaryString(f);
        }

        $('#ddlclientlist').change(function () {
            $('#ddlclientlist option').each(function (index) {
                if (($(this).is(':selected'))) {
                    var id = this.value;
                    console.log(id);
                    $("#ObjCRMUser_CurrentSubStage").val(id);
                }
            })
        });
         $('#ddluserlist').change(function () {
            $('#ddluserlist option').each(function (index) {
                if (($(this).is(':selected'))) {
                    var id = this.value;
                    console.log(id);
                    $("#ObjCRMUser_AssignedTo").val(id);
                }
            })
        });


        $('#filenotesarea').summernote();
        $('#pccnotesarea').summernote();
        $('#medicalnotesarea').summernote();
        $('#dtDOB').datepicker({
            format: 'dd/mm/yyyy',
            showWeek: true
        });
        $('#dtSaleDate').datepicker({
            format: 'dd/mm/yyyy',
            showWeek: true
        });
        $('#dtPassportIssueDate').datepicker({
            format: 'dd/mm/yyyy',
            showWeek: true
        });
        $('#dtPassportExpiryDate').datepicker({
            format: 'dd/mm/yyyy',
            showWeek: true
        });
        $('#dtSecondPassportIssueDate').datepicker({
            format: 'dd/mm/yyyy',
            showWeek: true
        });
        $('#dtSecondPassportExpiryDate').datepicker({
            format: 'dd/mm/yyyy',
            showWeek: true
        });
        $('#dtCurrentNZVisaExpiryDate').datepicker({
            format: 'dd/mm/yyyy',
            showWeek: true
        });
        $('#dtTravelConditionsValidTo').datepicker({
            format: 'dd/mm/yyyy',
            showWeek: true
        });
        $('#dtDueDate').datepicker({
            format: 'dd/mm/yyyy',
            showWeek: true
        });
        $('#dtMedicalCertificateExpiryDate').datepicker({
            format: 'dd/mm/yyyy',
            showWeek: true
        });
        $('#dtXrayIssueDate').datepicker({
            format: 'dd/mm/yyyy',
            showWeek: true
        });
        $('#dtMedicalCertificateIssueDate').datepicker({
            format: 'dd/mm/yyyy',
            showWeek: true
        });
        $('#dtXrayExpiryDate').datepicker({
            format: 'dd/mm/yyyy',
            showWeek: true
        });
        $('#dtPoliceCertificateDate1').datepicker({
            format: 'dd/mm/yyyy',
            showWeek: true
        });
        $('#dtPoliceCertificateDate2').datepicker({
            format: 'dd/mm/yyyy',
            showWeek: true
        });
        $('#dtPoliceCertificateDate3').datepicker({
            format: 'dd/mm/yyyy',
            showWeek: true
        });
        $('#dtNZQAOnlineSubmissionDate').datepicker({
            format: 'dd/mm/yyyy',
            showWeek: true
        });
        $('#dtNZQADocumentsSubmissionDate').datepicker({
            format: 'dd/mm/yyyy',
            showWeek: true
        });
        $('#dtNZQADocumentsReturnedDate').datepicker({
            format: 'dd/mm/yyyy',
            showWeek: true
        });
    });
</script>
